# adapted from https://github.com/taiki-e/cargo-hack/blob/main/.github/workflows/release.yml

name: Release binaries
on:
  push:
    tags:
      - '*'

jobs:
  create-release:
    if: github.repository_owner == 'teymour-aldridge'
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - uses: taiki-e/create-gh-release-action@v1
        id: create-gh-release
        with:
          prefix: teymour-aldridge-test-binary-release
          title: $prefix $version
          branch: main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      version: ${{ steps.create-gh-release.outputs.version }}

  upload-assets:
    name: Publish for ${{ matrix.target }}
    if: github.repository_owner == 'teymour-aldridge'
    needs:
      - create-release
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-18.04
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-18.04
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: teymour-aldridge-test-binary-release
          # The tag name contains the binary name so just use that.
          archive: $tag-$target
          target: ${{ matrix.target }}
          tar: all
          zip: windows
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_PROFILE_RELEASE_LTO: true
      - name: Set archive output variable
        id: archive-output
        shell: bash
        run: |
          if [[ ${{ matrix.target }} == windows ]]; then
            echo "::set-output name=${{ matrix.target }}::${{ github.ref_name }}-${{ matrix.target }}".zip
          else
            echo "::set-output name=${{ matrix.target }}::${{ github.ref_name }}-${{ matrix.target }}".tar.gz
          fi
    outputs:
      linux-tar: ${{ steps.archive-output.outputs.x86_64-unknown-linux-gnu }}
      windows-zip: ${{ steps.archive-output.outputs.x86_64-pc-windows-msvc }}

  upload-assets-mac:
    name: Publish universal binary for Mac
    if: github.repository_owner == 'teymour-aldridge'
    needs:
      - create-release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Build release for Mac
        id: build-release
        run: |
          ./scripts/release-mac-build.sh teymour-aldridge-test-binary-release "${{ github.ref_name }}"
      - uses: svenstaro/upload-release-action@2.2.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ steps.build-release.outputs.archive-name }}
          tag: ${{ github.ref }}
    outputs:
      mac-tar: ${{ steps.build-release.outputs.archive-name }}

  update-release-meta:
    name: Update release-meta branch
    if: github.repository_owner == 'teymour-aldridge'
    needs:
      - create-release
      - upload-assets
      - upload-assets-mac
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2 
      - name: Download mukti
        run: |
          mkdir -p ~/bin
          curl -LsSf "https://github.com/sunshowers/mukti/releases/download/mukti-bin-0.1.0/mukti-bin-0.1.0-x86_64-unknown-linux-gnu.tar.gz" \
            | tar xzf - -C ~/bin
      - name: Add release metadata
        run: |
          ~/bin/mukti-bin add-release --version ${{ needs.create-release.outputs.version }} \
            --url-prefix "https://github.com/sunshowers/test-binary-release/releases/download/${{ github.ref_name }}" \
            --archive x86_64-unknown-linux-gnu=${{ needs.upload-assets.outputs.linux-tar }} \
            --archive x86_64-pc-windows-msvc=${{ needs.upload-assets.outputs.windows-zip }} \
            --archive universal-apple-darwin=${{ needs.upload-assets-mac.outputs.mac-tar }}
      - name: Generate netlify redirects
        run: |
          mkdir out-dir
          ~/bin/mukti-bin generate-netlify out-dir --alias linux=x86_64-unknown-linux-gnu \
            --alias windows=x86_64-pc-windows-msvc --alias mac=universal-apple-darwin
      - name: Update releases.json on main branch
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions"
          git pull --autostash --rebase origin main
          git add .releases.json
          git commit -m "Update release metadata for ${{ github.ref_name }}"
          git push origin HEAD:main
      - name: Copy releases.json to output dir
        run: |
          cp .releases.json out-dir/releases.json
      - name: Deploy release metadata
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: release-meta
          folder: out-dir
